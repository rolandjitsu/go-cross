name: Test
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize]

jobs:
  test-native:
    runs-on: ubuntu-18.04
    steps:
      - name: Setup deps
        run: sudo apt-get install -y autoconf automake build-essential cmake pkg-config
      - uses: actions/checkout@v2
      - name: Checkout msgpack-c
        uses: actions/checkout@v2
        with:
          repository: msgpack/msgpack-c
          path: msgpack-c
          ref: 'c_master'
      - name: Setup msgpack
        run: |
          cd msgpack-c
          cmake .
          make -j `nproc`
          sudo make install
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15.2'
      - name: Run tests
        run: go test ./pkg/...
      - name: Compile the binaries
        run: CGO_LDFLAGS="-lmsgpackc" go build -race -o ./bin/hello cmd/hello/main.go
      - name: Verify the binaries
        run: |
          out=$(./bin/hello John)
          if [ "$out" != "Hello, John!" ]; then
            echo "Binary output is not ok"
            exit 1
          fi

          out=$(./bin/hello -msgpack John)
          if [ "$out" != "Hello, John! from msgpack" ]; then
            echo "Binary output is not ok"
            exit 1
          fi

  test-docker:
    runs-on: ubuntu-18.04
    steps:
      - name: Setup deps
        run: sudo apt-get install -y gcc-arm-linux-gnueabi qemu-user
      - name: Enable experimental features for the Docker CLI
        run: |
          mkdir -p ~/.docker
          echo $'{\n  "experimental": "enabled"\n}' | sudo tee ~/.docker/config.json
          sudo service docker restart
          docker version -f '{{.Client.Experimental}}'
          docker buildx version
      - uses: actions/checkout@v2
      - name: Compile the binaries
        run: docker buildx bake
      - name: Verify the binaries
        run: |
          unset LD_LIBRARY_PATH

          out=$(qemu-arm -L /usr/arm-linux-gnueabi/ ./bin/hello John)
          if [ "$out" != "Hello, John!" ]; then
            echo "Binary output is not ok"
            exit 1
          fi

          out=$(qemu-arm -L /usr/arm-linux-gnueabi/ ./bin/hello -msgpack John)
          if [ "$out" != "Hello, John! from msgpack" ]; then
            echo "Binary output is not ok"
            exit 1
          fi
